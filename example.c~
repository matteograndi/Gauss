/*
002  *  example.c
003  * 
004  *  Calculate the sum of a given range of integer numbers. The range is
005  *  specified by providing two integer numbers as command line argument.
006  *  If no arguments are specified, assume the predefined range [0..9].
007  *  Abort with an error message if the resulting number is too big to be
008  *  stored as int variable.
009  *
010  *  This program example is similar to the one found in the GCOV documentation.
011  *  It is used to demonstrate the HTML output generated by LCOV.
012  *
013  *  The program is split into 3 modules to better demonstrate the 'directory
014  *  overview' function. There are also a lot of bloated comments inserted to
015  *  artificially increase the source code size so that the 'source code
016  *  overview' function makes at least a minimum of sense.
017  *
018  */
019 
020 #include <stdio.h>
#include <stdlib.h>
#include "iterate.h"
#include "gauss.h"

static int start = 0;
static int end = 9;


int main (int argc, char* argv[])
{
    int total1, total2;

    /* Accept a pair of numbers as command line arguments. */

    if (argc == 3)
    {
        start   = atoi(argv[1]);
        end = atoi(argv[2]);
    }


    /* Use both methods to calculate the result. */

    total1 = iterate_get_sum (start, end);
    total2 = gauss_get_sum (start, end);


    /* Make sure both results are the same. */

    if (total1 != total2)
    {
        printf ("Failure (%d != %d)!\n", total1, total2);
    }
    else
    {
        printf ("Success, sum[%d..%d] = %d\n", start, end, total1);
    }

    return 0;
}
